<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd">
<!-- auto-confing(=자동설정) use-expressions(=SPEL문법 사용유무) -->
<!-- SPEL 문법 :hasAnyRole(=권한들 하나라도 가지고 있는 경우),permitAll(=권한과 상관없이 접근불가) -->
<!-- hasRole(=권한을 한개라도 가진 경우) -->
<http auto-config="true" use-expressions="true">
	<csrf disabled="true"/>
	<intercept-url pattern="/member/loginForm" access="permitAll"/>
	<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
	<intercept-url pattern="/**" access="permitAll"/>
	
	<!-- login-page(=로그인페이지), login-processing-url(=로그인페이지 from url),default-target-url(=로그인 성공), authentication-failure-url(=로그인 실패)  -->
	<form-login login-page="/member/loginForm" username-parameter="member_email" password-parameter="member_pwd" 
				login-processing-url="/member/login" default-target-url="/main/index" authentication-failure-url="/member/login?status=fail" 
				always-use-default-target="true"/>
	<!-- logout-->			
	<logout invalidate-session="true" logout-success-url="/member/logout"/>			
	<!-- invalid-session-url(=세션이 끊겼을 때 이동할 페이지),max-sessions(=최대 허용가능 중복 가능 세션 수),expired-url(=중복로그인이 일어났을 경우 이동할 페이지) -->
	<session-management invalid-session-url="/member/loginForm">
		<concurrency-control max-sessions="1" expired-url="/member/login?status=error" error-if-maximum-exceeded="true"/>
	</session-management>
	
</http>


<authentication-manager>
	<authentication-provider ref="memberAuthenticationProvider"/>
	<authentication-provider user-service-ref="memberAuthentServiceImpl"/>
</authentication-manager>

<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<beans:bean id="memberAuthentServiceImpl" class="member.service.MemberAuthentServiceImpl"/>
<beans:bean id="memberAuthenticationProvider" class="member.service.MemberAuthenticationProvider"/>
                              
</beans:beans>